# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python CI with Poetry

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        cd analise_dados
        poetry install
  tests:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
    - name: Test with pytest
      run: |
        poetry run pytest --junitxml=relatorio_testes.xml
    - name: Upload do Relatório de Testes
      uses: actions/upload-artifact@v4
      with:
          name: relatorio-de-testes-${{ github.sha }}
          path: analise_dados/relatorio_testes.xml
          if-no-files-found: error
  build:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
    - name: Build with poetry
      run: |
        poetry build
    - name: Upload do Pacote Buildado
      uses: actions/upload-artifact@v4
      with:
          name: pacote-buildado
          path: analise_dados/dist/
          if-no-files-found: error
  notificacao:
    runs-on: ubuntu-latest
    steps:
    - name: Enviar Notificação de Pipeline
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
          server_address: smtp-mail.outlook.com
          server_port: 465
          secure: true
          
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
      
          from: ${{ secrets.MAIL_USERNAME }}
          to: ${{ vars.EMAIL }}
      
        
          subject: '[CI/CD Pipeline] Status do Projeto: ${{ github.repository }}'
          body: |
            Pipeline executado!
      
            --------------------------------
            STATUS GERAL: ${{ job.status }} 
            --------------------------------
